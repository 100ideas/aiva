#!/bin/bash
# This script runs the same sequence as the CircleCI build

if [ $(uname) == "Darwin" ]; then
  if which brew >/dev/null; then
    echo "Brew is already installed"
  else
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi
fi

# install nodejs
if which node >/dev/null; then
  echo "Nodejs is already installed"
else
  if [ $(uname) == "Darwin" ]; then
    brew install node
  else
    curl -sL https://deb.nodesource.com/setup_6.x | bash -            # don't sudo w/ docker
    apt-get install -y nodejs                                         # don't sudo w/ docker
  fi
fi

# install python
if which python3 >/dev/null; then
  echo "Python3 is already installed"
else
  if [ $(uname) == "Darwin" ]; then
    brew install python3
  else
    apt-get -y install python3-dev python3-pip python3-setuptools     # don't sudo w/ docker
    pip install --upgrade pip
  fi
fi

# install MySQL
if which mysql >/dev/null; then
  echo "MySQL is already installed"
else
  if [ $(uname) == "Darwin" ]; then
    brew install mysql                                                # don't sudo w/ docker
  else
    apt-get -y install mysql-server
  fi
fi

# start mysql
UP=$(pgrep mysql | wc -l);
if [ "$UP" -eq 0 ];
then
  if [ $(uname) == "Darwin" ]; then
    mysql.server start
  else
    service mysql start
  fi
else
  echo "MySQL is already started"
fi

# # install postgres
# if which postgres >/dev/null; then
#   echo "Postgresql is already installed"
# else
#   if [ $(uname) == "Darwin" ]; then
#     brew install postgres
#     brew services start postgresql
#     sleep 5
#     createuser -s postgres
#   else
#     sudo apt-get -y install postgresql postgresql-contrib           # don't sudo w/ docker
#   fi
# fi

# # start postgres
# UP=$(pgrep postgres | wc -l);
# if [ "$UP" -eq 0 ];
# then
#   if [ $(uname) == "Darwin" ]; then
#     brew services start postgresql
#   else
#     service postgresql start
#   fi
# else
#   echo "Postgresql is already started"
# fi

# install neo4j
if which neo4j >/dev/null; then
  echo "Neo4j is already installed"
else
  if [ $(uname) == "Darwin" ]; then
    brew install neo4j
  else
    # ensure wget is installed via dockerfile
    wget -O - http://debian.neo4j.org/neotechnology.gpg.key | apt-key add -
    echo 'deb http://debian.neo4j.org/repo stable/' > /etc/apt/sources.list.d/neo4j.list
    # sudo apt-get update           # docker: bin/setup: line 95: sudo: command not found
    # sudo apt-get install neo4j    # docker: bin/setup: line 96: sudo: command not found
    apt-get update && apt-get install -y neo4j
  fi
fi

# start neo4j
UP=$(pgrep neo4j | wc -l);
if [ "$UP" -eq 0 ];
then
  if [ $(uname) == "Darwin" ]; then
    neo4j start
  else
    service neo4j start
  fi
else
  echo "Neo4j is already started"
fi

# install pip modules
if pip3 show six autocorrect websocket socketIO-client spacy >/dev/null; then
  echo "Pip modules already installed"
else
  # does pip3 cause problems on other systems? seems ok on docker, and simpler
  #   than `python3 -m pip install -U <modules>`
  pip3 install -U six autocorrect websocket socketIO-client spacy
fi
echo "spaCy model:"
python3 -m sputnik --name spacy find || python -m spacy.en.download

# install npm modules
if [ -d ./node_modules ]; then
  echo "Npm modules already installed"
else
  npm install
fi

# copy keys file if not already exist
BIN_DIR=`pwd`/bin
$BIN_DIR/copy-config

# run migration
node src/db.js
node_modules/.bin/sequelize db:migrate --env development
node_modules/.bin/sequelize db:migrate --env test
node_modules/.bin/sequelize db:migrate --env production
